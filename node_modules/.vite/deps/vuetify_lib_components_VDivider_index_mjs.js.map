{
  "version": 3,
  "sources": ["../../vuetify/src/components/VDivider/VDivider.tsx"],
  "sourcesContent": ["// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, useRender } from '@/util'\n\n// Types\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'maxHeight' | 'maxWidth'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const VDivider = defineComponent({\n  name: 'VDivider',\n\n  props: {\n    color: String,\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n\n    ...makeThemeProps(),\n  },\n\n  setup (props, { attrs }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => (\n      <hr\n        class={[\n          {\n            'v-divider': true,\n            'v-divider--inset': props.inset,\n            'v-divider--vertical': props.vertical,\n          },\n          themeClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          dividerStyles.value,\n          backgroundColorStyles.value,\n        ]}\n        aria-orientation={\n          !attrs.role || attrs.role === 'separator'\n            ? props.vertical ? 'vertical' : 'horizontal'\n            : undefined\n        }\n        role={`${attrs.role || 'separator'}`}\n      />\n    ))\n\n    return {}\n  },\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AACA;AAcO,IAAM,WAAW,gBAAgB;EACtC,MAAM;EAEN,OAAO;IACL,OAAO;IACP,OAAO;IACP,QAAQ,CAAC,QAAQ,MAAT;IACR,WAAW,CAAC,QAAQ,MAAT;IACX,UAAU;IAEV,GAAG,eAAc;EAPZ;EAUP,MAAO,OAAF,MAAoB;AAAA,QAAX;MAAE;QAAS;AACvB,UAAM;MAAE;QAAiB,aAAa,KAAD;AACrC,UAAM;MAAE;MAAwB;QAA0B,mBAAmB,MAAM,OAAO,OAAR,CAAN;AAC5E,UAAM,gBAAgB,SAAS,MAAM;AACnC,YAAM,SAAwB,CAAA;AAE9B,UAAI,MAAM,QAAQ;AAChB,eAAO,MAAM,WAAW,cAAc,cAAc,cAAc,MAAM,MAAP;MAClE;AAED,UAAI,MAAM,WAAW;AACnB,eAAO,MAAM,WAAW,qBAAqB,oBAAoB,cAAc,MAAM,SAAP;MAC/E;AAED,aAAO;IACR,CAZ6B;AAc9B,cAAU,MAAA,YAAA,MAAA;MAAA,SAEC,CACL;QACE,aAAa;QACb,oBAAoB,MAAM;QAC1B,uBAAuB,MAAM;MAH/B,GAKA,aAAa,OACb,uBAAuB,KAPlB;MAFD,SAWC,CACL,cAAc,OACd,sBAAsB,KAFjB;MAXD,oBAgBJ,CAAC,MAAM,QAAQ,MAAM,SAAS,cAC1B,MAAM,WAAW,aAAa,eAC9B;MAlBA,QAoBC,GAAE,MAAM,QAAQ;IApBjB,GAAA,IAAA,CAAD;AAwBT,WAAO,CAAA;EACR;AAvDqC,CAAD;",
  "names": []
}
